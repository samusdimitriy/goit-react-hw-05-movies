{"version":3,"file":"static/js/779.f80e2b06.chunk.js","mappings":"6PAEaA,EAAYC,EAAAA,EAAAA,IAAH,oFAMTC,EAAOD,EAAAA,EAAAA,GAAH,mFAMJE,EAAOF,EAAAA,EAAAA,GAAH,kQAYJG,EAAQH,EAAAA,EAAAA,GAAH,gDAILI,EAAcJ,EAAAA,EAAAA,EAAH,gD,mBCUxB,EAhCgB,WACd,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRD,GAAU,IACVE,EAAAA,EAAAA,IAAaR,GAASS,KAAKL,GAC3BE,GAAU,EACX,GAAE,CAACN,KAGF,gCACGK,IAAU,SAACK,EAAA,EAAD,KACX,SAAChB,EAAD,UACGS,GAAWA,EAAQQ,OAAS,GAC3B,SAACf,EAAD,UACGO,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAAClB,EAAD,YACE,SAACC,EAAD,UAAQgB,KACR,SAACf,EAAD,UAAcgB,MAFLF,EADA,OAQf,wEAKT,C,yLCpCKG,E,QAAYC,EAAAA,OAAa,CAC7BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EAAmB,mCAAG,sGACVN,EAAUO,IAAI,uBADJ,uBACzBC,EADyB,EACzBA,KADyB,kBAE1BA,EAAKC,SAFqB,2CAAH,qDAKnBC,EAAkB,mCAAG,WAAMC,GAAN,yFACTX,EAAUO,IAAI,gBAAiB,CACpDJ,OAAQ,CAAEQ,MAAAA,KAFoB,uBACxBH,EADwB,EACxBA,KADwB,kBAIzBA,EAAKC,SAJoB,2CAAH,sDAOlBG,EAAiB,mCAAG,WAAM5B,GAAN,yFACRgB,EAAUO,IAAV,iBAAwBvB,IADhB,uBACvBwB,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBK,EAAc,mCAAG,WAAM7B,GAAN,yFACLgB,EAAUO,IAAV,iBAAwBvB,EAAxB,aADK,uBACpBwB,EADoB,EACpBA,KADoB,kBAErBA,EAAKM,MAFgB,2CAAH,sDAKdtB,EAAY,mCAAG,WAAMR,GAAN,yFACHgB,EAAUO,IAAV,iBAAwBvB,EAAxB,aADG,uBAClBwB,EADkB,EAClBA,KADkB,kBAEnBA,EAAKC,SAFc,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/movies-api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-radius: 5px;\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);\n  background-color: #fff;\n  margin-bottom: 20px;\n  max-width: 960px;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const Description = styled.p`\n  margin-bottom: 10px;\n`;\n","import React from 'react';\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../services/movies-api';\nimport { Container, Description, Item, List, Title } from './Reviews.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    setLoader(true);\n    fetchReviews(movieId).then(setReviews);\n    setLoader(false);\n  }, [movieId]);\n\n  return (\n    <>\n      {loader && <Loader />}\n      <Container>\n        {reviews && reviews.length > 0 ? (\n          <List>\n            {reviews.map(({ id, author, content }) => (\n              <Item key={id}>\n                <Title>{author}</Title>\n                <Description>{content}</Description>\n              </Item>\n            ))}\n          </List>\n        ) : (\n          <p>We don't have any reviews for this movie</p>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst moviesApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd06fba2820f14d5608dbdd90132ff73d',\n    language: 'en-US',\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await moviesApi.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await moviesApi.get('/search/movie', {\n    params: { query },\n  });\n  return data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await moviesApi.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await moviesApi.get(`/movie/${movieId}/credits`);\n  return data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await moviesApi.get(`/movie/${movieId}/reviews`);\n  return data.results;\n};\n\nexport const fetchMovieByCategory = async category => {\n  const { data } = await moviesApi.get(`/movie/${category}`);\n  return data.results;\n};\n\nexport const fetchMovieByCategoryWithPage = async (category, page) => {\n  const { data } = await moviesApi.get(`/movie/${category}`, {\n    params: { page },\n  });\n  return data.results;\n};\n"],"names":["Container","styled","List","Item","Title","Description","movieId","useParams","useState","reviews","setReviews","loader","setLoader","useEffect","fetchReviews","then","Loader","length","map","id","author","content","moviesApi","axios","baseURL","params","api_key","language","fetchTrendingMovies","get","data","results","fetchMoviesByQuery","query","fetchMovieDetails","fetchMovieCast","cast"],"sourceRoot":""}