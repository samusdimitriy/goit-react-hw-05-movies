{"version":3,"file":"static/js/310.2f30a687.chunk.js","mappings":"8NAEaA,EAAUC,EAAAA,EAAAA,IAAH,kQAYPC,EAASD,EAAAA,EAAAA,IAAH,mFAgCNE,GA1BOF,EAAAA,EAAAA,IAAH,sQAYKA,EAAAA,EAAAA,OAAH,oPAcCA,EAAAA,EAAAA,GAAH,8PAkBJG,EAAOH,EAAAA,EAAAA,GAAH,qV,GAkBIA,EAAAA,EAAAA,GAAH,uE,QC7ClB,EAhCmB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACdC,EAAc,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAQE,QAAO,SAAAC,GAAK,OAAIA,EAAMC,WAAV,IAE3C,OACE,SAACT,EAAD,WACE,SAACG,EAAD,iBACGG,QADH,IACGA,OADH,EACGA,EAAgBI,KAAI,SAAAF,GAAK,OACxB,SAAC,KAAD,CAAMG,GAAE,kBAAaH,EAAMI,IAA3B,UACE,UAACR,EAAD,YACE,SAACF,EAAD,CACEW,IAAG,yCAAoCL,EAAMC,aAC7CK,IAAKN,EAAMO,SAEb,uBAAIP,EAAMO,UALDP,EAAMI,KADmBJ,EAAMI,GADpB,OAcjC,C,mJCvBYI,EAAaf,EAAAA,EAAAA,KAAH,2MAWVgB,EAAQhB,EAAAA,EAAAA,MAAH,mIAQLiB,EAASjB,EAAAA,EAAAA,OAAH,oV,mBCyDnB,EAvEe,WACb,OAAwCkB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAsDF,EAAAA,EAAAA,WAAS,GAA/D,eAAOG,EAAP,KAA4BC,EAA5B,KACA,GAA4BJ,EAAAA,EAAAA,WAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAA4BN,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAewB,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQX,EAAaY,IAAI,SAC1BD,IACLP,EAAcO,IACdE,EAAAA,EAAAA,IAAmBF,GAAOG,MAAK,SAAAC,GAC7B,IAAKA,EAAKC,OAAQ,OAAOV,GAAuB,GAChDG,EAAUM,EACX,IACF,GAAE,CAACf,IA+BJ,OACE,+BACE,4BACE,UAACJ,EAAD,CAAYqB,SAhCG,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,cAAcC,SAASC,OAAOH,MAAMI,OAAOC,cAC3DnB,EAAiC,KAAVc,GACvBnB,EAAgB,CAAEU,MAAOS,IAEX,KAAVA,IAEFZ,GAAU,IAEVK,EAAAA,EAAAA,IAAmBO,GAChBN,MAAK,SAAAC,GACgB,IAAhBA,EAAKC,QACPV,GAAuB,EAE1B,IACAoB,OAAM,SAAAC,GACDA,EAAMC,UAAsC,MAA1BD,EAAMC,SAASC,QACnCvB,GAAuB,EAE1B,IACAwB,SAAQ,kBAAMtB,GAAU,EAAhB,IAEd,EASK,WACE,SAACX,EAAD,CACEkC,KAAK,OACLC,KAAK,SACLZ,MAAOjB,EACP8B,SAZgB,SAAAf,GACxBd,EAAcc,EAAEgB,OAAOd,MACxB,EAWSe,YAAY,0BAGd,SAACrC,EAAD,CAAQiC,KAAK,SAAb,uBAED1B,IAAuB,oEACvBE,GACC,SAAC6B,EAAA,EAAD,IAEAnD,GAAUA,EAAO+B,OAAS,IAAK,SAACqB,EAAA,EAAD,CAAYpD,OAAQA,QAK5D,C,yLC1EKqD,E,QAAYC,EAAAA,OAAa,CAC7BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EAAmB,mCAAG,sGACVN,EAAU1B,IAAI,uBADJ,uBACzBG,EADyB,EACzBA,KADyB,kBAE1BA,EAAK8B,SAFqB,2CAAH,qDAKnBhC,EAAkB,mCAAG,WAAMF,GAAN,yFACT2B,EAAU1B,IAAI,gBAAiB,CACpD6B,OAAQ,CAAE9B,MAAAA,KAFoB,uBACxBI,EADwB,EACxBA,KADwB,kBAIzBA,EAAK8B,SAJoB,2CAAH,sDAOlBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRT,EAAU1B,IAAV,iBAAwBmC,IADhB,uBACvBhC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBiC,EAAc,mCAAG,WAAMD,GAAN,yFACLT,EAAU1B,IAAV,iBAAwBmC,EAAxB,aADK,uBACpBhC,EADoB,EACpBA,KADoB,kBAErBA,EAAKkC,MAFgB,2CAAH,sDAKdC,EAAY,mCAAG,WAAMH,GAAN,yFACHT,EAAU1B,IAAV,iBAAwBmC,EAAxB,aADG,uBAClBhC,EADkB,EAClBA,KADkB,kBAEnBA,EAAK8B,SAFc,2CAAH,qD","sources":["components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/movies-api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-radius: 5px;\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);\n  background-color: #fff;\n  margin-bottom: 20px;\n  max-width: 960px;\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n  height: 400px;\n  margin-bottom: 10px;\n`;\n\nexport const Link = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  width: 300px;\n  padding: 10px;\n  border-radius: 5px;\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);\n  background-color: #fff;\n`;\n\nexport const Button = styled.button`\n  padding: 10px;\n  border-radius: 5px;\n  background-color: #fff;\n  border: 1px solid #000;\n  cursor: pointer;\n  transition: all 250ms ease-in-out;\n\n  &:hover {\n    background-color: #000;\n    color: #fff;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n  margin-bottom: 20px;\n  padding: 0;\n  list-style: none;\n\n  & > a {\n    text-decoration: none;\n  }\n\n  & > a:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-radius: 5px;\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);\n  background-color: #fff;\n  width: 300px;\n  height: 500px;\n\n  & > p {\n    margin-bottom: 10px;\n    text-decoration: none;\n    color: #212121;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n  text-align: center;\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Item, List, Poster, Wrapper } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const filteredMovies = movies?.filter(movie => movie.poster_path); \n\n  return (\n    <Wrapper>\n      <List>\n        {filteredMovies?.map(movie => (\n          <Link to={`/movies/${movie.id}`} key={movie.id}>\n            <Item key={movie.id}>\n              <Poster\n                src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n                alt={movie.title}\n              />\n              <p>{movie.title}</p>\n            </Item>\n          </Link>\n        ))}\n      </List>\n    </Wrapper>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","import styled from '@emotion/styled';\n\nexport const FormSearch = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: #fff;\n  width: 300px;\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #000;\n  margin-right: 10px;\n  width: 100%;\n`;\n\nexport const Button = styled.button`\n  padding: 10px;\n  border-radius: 5px;\n  background-color: #fff;\n  border: 1px solid #000;\n  cursor: pointer;\n  transition: all 250ms ease-in-out;\n\n  &:hover {\n    background-color: #000;\n    color: #fff;\n  }\n\n  &:disabled {\n    background-color: #ccc;\n    color: #000;\n    cursor: not-allowed;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByQuery } from '../../services/movies-api';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Button, FormSearch, Input } from './Movies.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputQuery, setInputQuery] = useState('');\n  const [showNotFoundMessage, setShowNotFoundMessage] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) return;\n    setInputQuery(query);\n    fetchMoviesByQuery(query).then(data => {\n      if (!data.length) return setShowNotFoundMessage(true);\n      setMovies(data);\n    });\n  }, [searchParams]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const value = e.currentTarget.elements.search.value.trim().toLowerCase();\n    setShowNotFoundMessage(value === '');\n    setSearchParams({ query: value });\n\n    if (value === '') {\n    } else {\n      setLoader(true);\n\n      fetchMoviesByQuery(value)\n        .then(data => {\n          if (data.length === 0) {\n            setShowNotFoundMessage(true);\n          }\n        })\n        .catch(error => {\n          if (error.response && error.response.status === 404) {\n            setShowNotFoundMessage(true);\n          }\n        })\n        .finally(() => setLoader(false));\n    }\n  };\n\n  const handleInputChange = e => {\n    setInputQuery(e.target.value);\n  };\n\n  return (\n    <>\n      <div>\n        <FormSearch onSubmit={handleSubmit}>\n          <Input\n            type=\"text\"\n            name=\"search\"\n            value={inputQuery}\n            onChange={handleInputChange}\n            placeholder=\"Enter a search query\"\n          />\n\n          <Button type=\"submit\">Search</Button>\n        </FormSearch>\n        {showNotFoundMessage && <p>We apologize, the movies were not found.</p>}\n        {loader ? (\n          <Loader />\n        ) : (\n          movies && movies.length > 0 && <MoviesList movies={movies} />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst moviesApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd06fba2820f14d5608dbdd90132ff73d',\n    language: 'en-US',\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await moviesApi.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await moviesApi.get('/search/movie', {\n    params: { query },\n  });\n  return data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await moviesApi.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await moviesApi.get(`/movie/${movieId}/credits`);\n  return data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await moviesApi.get(`/movie/${movieId}/reviews`);\n  return data.results;\n};\n\nexport const fetchMovieByCategory = async category => {\n  const { data } = await moviesApi.get(`/movie/${category}`);\n  return data.results;\n};\n\nexport const fetchMovieByCategoryWithPage = async (category, page) => {\n  const { data } = await moviesApi.get(`/movie/${category}`, {\n    params: { page },\n  });\n  return data.results;\n};\n"],"names":["Wrapper","styled","Poster","List","Item","movies","filteredMovies","filter","movie","poster_path","map","to","id","src","alt","title","FormSearch","Input","Button","useSearchParams","searchParams","setSearchParams","useState","inputQuery","setInputQuery","showNotFoundMessage","setShowNotFoundMessage","loader","setLoader","setMovies","useEffect","query","get","fetchMoviesByQuery","then","data","length","onSubmit","e","preventDefault","value","currentTarget","elements","search","trim","toLowerCase","catch","error","response","status","finally","type","name","onChange","target","placeholder","Loader","MoviesList","moviesApi","axios","baseURL","params","api_key","language","fetchTrendingMovies","results","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchReviews"],"sourceRoot":""}